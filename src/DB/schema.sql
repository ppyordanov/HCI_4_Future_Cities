DROP TABLE IF EXISTS SYS_USER;
DROP TABLE IF EXISTS PHOTO;
DROP TABLE IF EXISTS WEATHER;
DROP TABLE IF EXISTS ACHIEVEMENT;
DROP TABLE IF EXISTS RANK;
DROP TABLE IF EXISTS PHOTO_WEATHER;
DROP TABLE IF EXISTS USER_ACHIEVEMENT;
DROP TABLE IF EXISTS ACHIEVEMENT_WEATHER;



CREATE TABLE ACHIEVEMENT(

	achievementID INTEGER PRIMARY KEY AUTOINCREMENT,
	title VARCHAR(50) NOT NULL,
	description VARCHAR(500)

);

CREATE TABLE RANK(

	rankID INTEGER PRIMARY KEY AUTOINCREMENT,
	positiveVotes INTEGER DEFAULT 0,
	negativeVotes INTEGER DEFAULT 0

);

CREATE TABLE WEATHER(

	weatherID INTEGER PRIMARY KEY AUTOINCREMENT,
	type VARCHAR(10) NOT NULL

);


CREATE TABLE SYS_USER(

	userID INTEGER PRIMARY KEY AUTOINCREMENT,
	rankID INTEGER,
	
	passwordSalt VARCHAR NOT NULL,
	dbHashKey VARCHAR NOT NULL,
	email VARCHAR(50) NOT NULL,
	avatar VARCHAR(50),
	poINTEGERs INTEGER DEFAULT 0,
	firstName VARCHAR(20) DEFAULT 'Anon',
	lastName VARCHAR(20) DEFAULT 'Anon',
	
	CONSTRAINT fk_u_rankID FOREIGN KEY (rankID)
	REFERENCES RANK(rankID)
	ON DELETE CASCADE
	

);

CREATE TABLE PHOTO(

	photoID INTEGER PRIMARY KEY AUTOINCREMENT,
	userID INTEGER,
	rankID INTEGER,
	
	time TIMESTAMP,
	latitude DECIMAL(9,6) NOT NULL,
	longitude DECIMAL(9,6) NOT NULL,
	title VARCHAR(50) NOT NULL,
	description VARCHAR(500),
	photo VARCHAR(150),
	square INT,
	
	
	CONSTRAINT fk_photo FOREIGN KEY (userID)
	REFERENCES SYS_USER(userID)
	ON DELETE CASCADE,
	
	CONSTRAINT fk_p_rankID FOREIGN KEY (rankID)
	REFERENCES RANK(rankID)
	ON DELETE CASCADE

);


CREATE TABLE PHOTO_WEATHER(

	photoID INTEGER,
	weatherID INTEGER,
	
	CONSTRAINT fk_photoID FOREIGN KEY (photoID)
	REFERENCES PHOTO(photoID)
	ON DELETE CASCADE,
	
	CONSTRAINT fk_p_weatherID FOREIGN KEY (weatherID)
	REFERENCES WEATHER(weatherID)
	ON DELETE CASCADE



);

CREATE TABLE USER_ACHIEVEMENT(

	userID INTEGER,
	achievementID INTEGER,
	
	CONSTRAINT fk_userID FOREIGN KEY (userID)
	REFERENCES SYS_USER(userID)
	ON DELETE CASCADE,

	CONSTRAINT fk_achievementID FOREIGN KEY (achievementID)
	REFERENCES ACHIEVEMENT(achievementID)
	ON DELETE CASCADE


);

CREATE TABLE ACHIEVEMENT_WEATHER(

	achievementID INTEGER,
	weatherID INTEGER,
	
	CONSTRAINT fk_w_achievementID FOREIGN KEY (achievementID)
	REFERENCES ACHIEVEMENT(achievementID)
	ON DELETE CASCADE,

	CONSTRAINT fk_weatherID FOREIGN KEY (weatherID)
	REFERENCES WEATHER(weatherID)
	ON DELETE CASCADE

);

